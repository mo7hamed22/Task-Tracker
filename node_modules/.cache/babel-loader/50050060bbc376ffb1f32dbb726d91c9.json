{"ast":null,"code":"var _jsxFileName = \"/home/mohamed/Desktop/React/Task-Tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./compnents/Header\";\nimport Tasks from \"./compnents/Tasks\";\nimport Footer from \"./compnents/Footer\";\nimport About from \"./compnents/About\";\nimport \"react-router-dom\";\nimport AddTask from \"./compnents/addTask\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const _url = \"http://localhost:5000/tasks\";\n  useEffect(() => {\n    const getTasks = async () => {\n      const data = await fetchTasks();\n      setTasks(data);\n    };\n\n    getTasks();\n  }, []); //Get Data (Tasks) From API\n\n  const fetchTasks = async () => {\n    const res = await fetch(_url);\n    const data = await res.json();\n    console.log(\"data\", data);\n    return data;\n  }; //Get Data By ID\n\n\n  const fetchTaskById = async id => {\n    const res = await fetch(`${_url}/${id}`);\n    const data = await res.json();\n    console.log(\"data\", data);\n    return data;\n  }; //delete task\n\n\n  const deleteTask = async id => {\n    //Delete Data using APi\n    await fetch(`${_url}/${id}`, {\n      method: \"Delete\"\n    }); // console.log(\"id\", id);\n\n    setTasks(tasks.filter(task => task.id !== id));\n  }; // task Reminder\n\n\n  const toggleReminder = async id => {\n    const upTask = await fetchTaskById(id);\n    const toggleTask = { ...upTask,\n      reminder: !upTask.reminder\n    };\n    const res = await fetch(`${_url}/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(toggleTask)\n    });\n    const data = await res.json();\n    console.log(\"data\", data);\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: data.reminder\n    } : task));\n  }; //Some Problem Here In Get Data Auto After Add It\n  //add Task\n\n\n  const addTask = async task => {\n    let newTask = [];\n    fetch(_url, {\n      method: \"Post\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(task)\n    }).then(data => {\n      data.json().then(data => {\n        newTask = data;\n        setTasks([...tasks, newTask]);\n      });\n    });\n    console.log(\"tasks\", tasks); // const data = await res.json();\n    // const id = Math.floor(Math.random() * 10000) + 1;\n    // console.log(task);\n    // let newTask = { id, ...task };\n    // console.log(\"task\", ...tasks);\n    // console.log(\"new\", newTask);\n    // setTasks([...tasks, newTask]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header // className=\"header\"\n    , {\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAddTaskBtn: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      toggleReminder: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this) : \"No Tasks Here Yalaa\", /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mohamed/Desktop/React/Task-Tracker/src/App.js"],"names":["Header","Tasks","Footer","About","AddTask","useState","useEffect","App","showAddTask","setShowAddTask","tasks","setTasks","_url","getTasks","data","fetchTasks","res","fetch","json","console","log","fetchTaskById","id","deleteTask","method","filter","task","toggleReminder","upTask","toggleTask","reminder","headers","body","JSON","stringify","map","addTask","newTask","then","length"],"mappings":"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","sourcesContent":["import Header from \"./compnents/Header\";\nimport Tasks from \"./compnents/Tasks\";\nimport Footer from \"./compnents/Footer\";\nimport About from \"./compnents/About\";\nimport {} from \"react-router-dom\";\nimport AddTask from \"./compnents/addTask\";\nimport { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  const _url = \"http://localhost:5000/tasks\";\n  useEffect(() => {\n    const getTasks = async () => {\n      const data = await fetchTasks();\n      setTasks(data);\n    };\n    getTasks();\n  }, []);\n  //Get Data (Tasks) From API\n  const fetchTasks = async () => {\n    const res = await fetch(_url);\n    const data = await res.json();\n    console.log(\"data\", data);\n    return data;\n  };\n  //Get Data By ID\n  const fetchTaskById = async (id) => {\n    const res = await fetch(`${_url}/${id}`);\n    const data = await res.json();\n    console.log(\"data\", data);\n    return data;\n  };\n\n  //delete task\n  const deleteTask = async (id) => {\n    //Delete Data using APi\n    await fetch(`${_url}/${id}`, { method: \"Delete\" });\n\n    // console.log(\"id\", id);\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  // task Reminder\n  const toggleReminder = async (id) => {\n    const upTask = await fetchTaskById(id);\n    const toggleTask = { ...upTask, reminder: !upTask.reminder };\n    const res = await fetch(`${_url}/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(toggleTask),\n    });\n    const data = await res.json();\n\n    console.log(\"data\", data);\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    );\n  };\n  //Some Problem Here In Get Data Auto After Add It\n  //add Task\n  const addTask = async (task) => {\n    let newTask = [];\n    fetch(_url, {\n      method: \"Post\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(task),\n    }).then((data) => {\n      data.json().then((data) => {\n        newTask = data;\n        setTasks([...tasks, newTask]);\n      });\n    });\n    console.log(\"tasks\", tasks);\n\n    // const data = await res.json();\n\n    // const id = Math.floor(Math.random() * 10000) + 1;\n    // console.log(task);\n    // let newTask = { id, ...task };\n    // console.log(\"task\", ...tasks);\n    // console.log(\"new\", newTask);\n\n    // setTasks([...tasks, newTask]);\n  };\n\n  return (\n    <div className=\"container\">\n      <Header\n        // className=\"header\"\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAddTaskBtn={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks\n          tasks={tasks}\n          onDelete={deleteTask}\n          toggleReminder={toggleReminder}\n        />\n      ) : (\n        \"No Tasks Here Yalaa\"\n      )}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}