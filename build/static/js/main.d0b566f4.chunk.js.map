{"version":3,"sources":["compnents/Button.js","compnents/Header.js","compnents/Task.js","compnents/Tasks.js","compnents/addTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","protoTypes","PropTypes","string","func","isRequired","Header","title","onAdd","showAddTaskBtn","Task","task","onDelete","toggleReminder","reminder","onDoubleClick","id","day","cursor","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","console","log","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0b566f4.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({ color, text, onClick }) => {\n  return (\n    <button\n      onClick={onClick}\n      style={{ backgroundColor: color }}\n      className=\"btn\"\n    >\n      {text}\n    </button>\n  );\n};\nButton.defaultProps = {\n  color: \"blue\",\n};\nButton.protoTypes = {\n  color: PropTypes.string,\n  text: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import PropTypes from \"prop-types\";\nimport Button from \"./Button\";\n\nconst Header = ({ title, onAdd, showAddTaskBtn }) => {\n  // const onClickFunc = () => {\n  //   console.log(\"Header Clicked \");\n  // };\n  return (\n    <header>\n      <h1>{title}</h1>\n      <Button\n        color={showAddTaskBtn ? \"red\" : \"green\"}\n        text={showAddTaskBtn ? \"Close\" : \"Add\"}\n        onClick={onAdd}\n        showAddTaskBtn={showAddTaskBtn}\n      />\n    </header>\n  );\n};\nHeader.defaultProps = {\n  title: \"Task Tracker\",\n};\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\nexport default Header;\n","import { FaTimes } from \"react-icons/fa\";\n\nconst Task = ({ task, onDelete, toggleReminder }) => {\n  return (\n    <div\n      className={`task ${task.reminder ? \"reminder\" : \"\"}`}\n      onDoubleClick={() => toggleReminder(task.id)}\n    >\n      <h3>\n        <p>{task.text}</p>\n        <p>{task.day}</p>\n\n        <FaTimes\n          style={{ color: \"red\", cursor: \"pointer\" }}\n          onClick={() => onDelete(task.id)}\n        />\n      </h3>\n    </div>\n  );\n};\n\nexport default Task;\n","import Task from \"./Task\";\nconst Tasks = ({ tasks, onDelete, toggleReminder }) => {\n  return (\n    <>\n      {tasks.map((task) => (\n        <Task\n          key={task.id}\n          task={task}\n          onDelete={onDelete}\n          toggleReminder={toggleReminder}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default Tasks;\n","import { useState } from \"react\";\n\nconst AddTask = ({ onAdd }) => {\n  const [text, setText] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [reminder, setReminder] = useState(false);\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (!text) {\n      alert(\"Pleas Enter Task Description\");\n      return;\n    }\n    onAdd({ text, day, reminder });\n    setText(\"\");\n    setDay(\"\");\n    setReminder(false);\n  };\n\n  return (\n    <form className=\"add-form\" onSubmit={onSubmit}>\n      <div className=\"form-control\">\n        <label>Task</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add Task\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n      </div>\n      <div className=\"form-control\">\n        <label>Day & Time</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add Day & Time\"\n          value={day}\n          onChange={(e) => setDay(e.target.value)}\n        />\n      </div>\n      <div className=\"form-control form-control-check\">\n        <label>Set Reminder</label>\n        <input\n          type=\"checkbox\"\n          checked={reminder}\n          value={reminder}\n          onChange={(e) => setReminder(e.currentTarget.checked)}\n        />\n      </div>\n\n      <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\n    </form>\n  );\n};\n\nexport default AddTask;\n","import Header from \"./compnents/Header\";\nimport Tasks from \"./compnents/Tasks\";\nimport AddTask from \"./compnents/addTask\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([\n    { id: 1, text: \"t1\", reminder: false, day: \"27/3/2022\" },\n    { id: 2, text: \"t2\", reminder: false, day: \"27/3/2022\" },\n    { id: 3, text: \"t3\", reminder: false, day: \"27/3/2022\" },\n  ]);\n  //delete task\n  const deleteTask = (id) => {\n    // console.log(\"id\", id);\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  // task Reminder\n  const toggleReminder = (id) => {\n    // console.log(\"id\", id);\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n\n  //add Task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    console.log(task);\n    let newTask = { id, ...task };\n    console.log(\"task\", ...tasks);\n    console.log(\"new\", newTask);\n\n    setTasks([...tasks, newTask]);\n  };\n\n  return (\n    <div className=\"container\">\n      <Header\n        // className=\"header\"\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAddTaskBtn={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks\n          tasks={tasks}\n          onDelete={deleteTask}\n          toggleReminder={toggleReminder}\n        />\n      ) : (\n        \"No Tasks Here Yalaa\"\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}